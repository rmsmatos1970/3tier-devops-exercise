name: Publish Docker image

on:
  #pull_request:
  #  branches:
  #    - main
  #push:
  #  branches:
  #    - main
  
  release:
    branches:
      - main
    types: [created]
    tags: ["v*.*.*"]
    paths: 
      - 'api/**'
env:
  IMAGE_NAME: "3tier-api"
  CONTAINER_NAME: "3tier-api-container"
  ARTIFACT_NAME: "3tier-api-artifact"
  
jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout to the branch"
        id: checkout
        uses: actions/checkout@v4

      - name: "Get Tag"
        id: tag
        uses: dawidd6/action-get-tag@v1

      - name: "Get version number"
        run: |
          version_from_tag="${{ steps.tag.outputs.tag}}"
          version="${version_from_tag#v}"
          echo "version=$version" >> "$GITHUB_ENV"
      
      - name: "Build Docker Image"
        run: |
          docker build -f /api/Dockerfile . -t ${{ env.IMAGE_NAME}}:${{ step.tag.outputs.tag}}

      - name: "Save Docker Image"
        run: |
          docker save -o ${{ env.ARTIFACT_NAME }}.tar ${{ env.IMAGE_NAME}}:${{ step.tag.outputs.tag}}

      - name: "Upload artifact"
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}.tar
          retention-days: 7
          
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1
        
      - name: "Get Tag"
        id: tag
        uses: dawidd6/action-get-tag@v1  
        
      - name: "Download artifact"
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}          

      - name: "Log in to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: "Load & Push Docker Image"
        run: | 
          docker load -i ${{ env.ARTIFACT_NAME }}.tar

      - name: "Tag Docker Image With Specific Version"
        run: |
          docker tag ${{ env.IMAGE_NAME}}:${{ step.tag.outputs.tag}} ${{ secrets.DOCKER_HUB }}:${{ env.IMAGE_NAME}}:${{ step.tag.outputs.tag}}

      - name: "Tag Docker Image as Latest"
        run: |
          docker tag ${{ env.IMAGE_NAME}}:${{ step.tag.outputs.tag}} ${{ secrets.DOCKER_HUB }}:${{ env.IMAGE_NAME}}:latest

      - name: "Push to Docker Hub"
        run: |
          docker push ${{ secrets.DOCKER_HUB }}:${{ env.IMAGE_NAME}}:${{ step.tag.outputs.tag}}
          docker push ${{ secrets.DOCKER_HUB }}:${{ env.IMAGE_NAME}}:latest

      #- name: "Extract metadata (tags, labels) for Docker"
      #  id: meta
      #  uses: docker/metadata-action@v5
      #  with:
      #    images: my-docker-hub-namespace/my-docker-hub-repository

      #- name: "Build and push Docker image"
      #  uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      #  with:
      #    context: .
      #    file: ./Dockerfile
      #    push: true
      #    tags: ${{ steps.meta.outputs.tags }}
      #    labels: ${{ steps.meta.outputs.labels }}
